{"ast":null,"code":"import React from\"react\";import{ComposableMap,Geographies,Geography,Marker,Line,Graticule}from\"react-simple-maps\";import{markers,NYClines,testLines}from'./data';import{allLines}from'./test';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var geoUrl=\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";var MapChart=function MapChart(){return/*#__PURE__*/_jsxs(ComposableMap,{children:[/*#__PURE__*/_jsx(Graticule,{stroke:\"#DDD\"}),/*#__PURE__*/_jsx(Geographies,{geography:geoUrl,fill:\"#D6D6DA\",stroke:\"#FFFFFF\",strokeWidth:0.5,children:function children(_ref){var geographies=_ref.geographies;return geographies.map(function(geo){return/*#__PURE__*/_jsx(Geography,{geography:geo,style:{default:{fill:\"#D6D6DA\",outline:\"none\"},hover:{fill:\"#4DEF19\",outline:\"none\"},pressed:{fill:\"green\",outline:\"none\"}}},geo.rsmKey);});}}),markers.map(function(_ref2){var name=_ref2.name,coordinates=_ref2.coordinates,markerOffset=_ref2.markerOffset;return/*#__PURE__*/_jsxs(Marker,{coordinates:coordinates,children:[/*#__PURE__*/_jsx(\"circle\",{r:3,fill:\"#F00\",stroke:\"#fff\",strokeWidth:0.5}),/*#__PURE__*/_jsx(\"text\",{textAnchor:\"middle\",y:markerOffset,style:{fontFamily:\"system-ui\",fill:\"#5D5A6D\"},children:name})]},name);}),allLines.map(function(_ref3){var from=_ref3.from,to=_ref3.to,stroke=_ref3.stroke,strokeWidth=_ref3.strokeWidth,strokeLinecap=_ref3.strokeLinecap;return/*#__PURE__*/_jsx(Line,{from:from,to:to,stroke:stroke,strokeWidth:strokeWidth,strokeLinecap:strokeLinecap});})]});};export default MapChart;","map":{"version":3,"sources":["/Users/louisoregan/Desktop/dataserver/react-apps/cowrie-logs-visualizer/src/charts/pewpewv2.js"],"names":["React","ComposableMap","Geographies","Geography","Marker","Line","Graticule","markers","NYClines","testLines","allLines","geoUrl","MapChart","geographies","map","geo","default","fill","outline","hover","pressed","rsmKey","name","coordinates","markerOffset","fontFamily","from","to","stroke","strokeWidth","strokeLinecap"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,aADF,CAEEC,WAFF,CAGEC,SAHF,CAIEC,MAJF,CAKEC,IALF,CAMEC,SANF,KAOO,mBAPP,CAQA,OAAQC,OAAR,CAAiBC,QAAjB,CAA2BC,SAA3B,KAA2C,QAA3C,CACA,OAAQC,QAAR,KAAuB,QAAvB,C,wFACA,GAAMC,CAAAA,MAAM,CACZ,wGADA,CAKA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,mBACE,MAAC,aAAD,yBAGE,KAAC,SAAD,EAAW,MAAM,CAAC,MAAlB,EAHF,cAIE,KAAC,WAAD,EACE,SAAS,CAAED,MADb,CAEE,IAAI,CAAC,SAFP,CAGE,MAAM,CAAC,SAHT,CAIE,WAAW,CAAE,GAJf,UAOG,2BAAGE,CAAAA,WAAH,MAAGA,WAAH,OACCA,CAAAA,WAAW,CAACC,GAAZ,CAAgB,SAAAC,GAAG,qBAAI,KAAC,SAAD,EAA4B,SAAS,CAAEA,GAAvC,CAErB,KAAK,CAAE,CACPC,OAAO,CAAE,CACPC,IAAI,CAAE,SADC,CAEPC,OAAO,CAAE,MAFF,CADF,CAKPC,KAAK,CAAE,CACLF,IAAI,CAAE,SADD,CAELC,OAAO,CAAE,MAFJ,CALA,CASPE,OAAO,CAAE,CACPH,IAAI,CAAE,OADC,CAEPC,OAAO,CAAE,MAFF,CATF,CAFc,EAAgBH,GAAG,CAACM,MAApB,CAAJ,EAAnB,CADD,EAPH,EAJF,CA8BGd,OAAO,CAACO,GAAR,CAAY,mBAAGQ,CAAAA,IAAH,OAAGA,IAAH,CAASC,WAAT,OAASA,WAAT,CAAsBC,YAAtB,OAAsBA,YAAtB,oBACX,MAAC,MAAD,EAAmB,WAAW,CAAED,WAAhC,wBACA,eAAQ,CAAC,CAAE,CAAX,CAAc,IAAI,CAAC,MAAnB,CAA0B,MAAM,CAAC,MAAjC,CAAwC,WAAW,CAAE,GAArD,EADA,cAEA,aACI,UAAU,CAAC,QADf,CAEI,CAAC,CAAEC,YAFP,CAGI,KAAK,CAAE,CAAEC,UAAU,CAAE,WAAd,CAA2BR,IAAI,CAAE,SAAjC,CAHX,UAKKK,IALL,EAFA,GAAaA,IAAb,CADW,EAAZ,CA9BH,CA0CGZ,QAAQ,CAACI,GAAT,CAAa,mBAAEY,CAAAA,IAAF,OAAEA,IAAF,CAAQC,EAAR,OAAQA,EAAR,CAAYC,MAAZ,OAAYA,MAAZ,CAAoBC,WAApB,OAAoBA,WAApB,CAAiCC,aAAjC,OAAiCA,aAAjC,oBACV,KAAC,IAAD,EAAM,IAAI,CAAEJ,IAAZ,CAAkB,EAAE,CAAEC,EAAtB,CAA0B,MAAM,CAAEC,MAAlC,CAA0C,WAAW,CAAEC,WAAvD,CAAoE,aAAa,CAAEC,aAAnF,EADU,EAAb,CA1CH,GADF,CAgDD,CAjDD,CAmDA,cAAelB,CAAAA,QAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker,\r\n  Line,\r\n  Graticule\r\n} from \"react-simple-maps\";\r\nimport {markers, NYClines, testLines} from './data';\r\nimport {allLines} from './test';\r\nconst geoUrl =\r\n\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <ComposableMap\r\n      \r\n    >\r\n      <Graticule stroke=\"#DDD\" />\r\n      <Geographies\r\n        geography={geoUrl}\r\n        fill=\"#D6D6DA\"\r\n        stroke=\"#FFFFFF\"\r\n        strokeWidth={0.5}\r\n        \r\n      >\r\n        {({ geographies }) =>\r\n          geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} \r\n            \r\n            style={{\r\n            default: {\r\n              fill: \"#D6D6DA\",\r\n              outline: \"none\"\r\n            },\r\n            hover: {\r\n              fill: \"#4DEF19\",\r\n              outline: \"none\"\r\n            },\r\n            pressed: {\r\n              fill: \"green\",\r\n              outline: \"none\"\r\n            }\r\n          }}/>)\r\n        }\r\n      </Geographies>\r\n      {markers.map(({ name, coordinates, markerOffset }) => (\r\n        <Marker key={name} coordinates={coordinates}>\r\n        <circle r={3} fill=\"#F00\" stroke=\"#fff\" strokeWidth={0.5} />\r\n        <text\r\n            textAnchor=\"middle\"\r\n            y={markerOffset}\r\n            style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\r\n          >\r\n            {name}\r\n          </text>\r\n      </Marker>\r\n      ))}\r\n      {allLines.map(({from, to, stroke, strokeWidth, strokeLinecap}) => (\r\n          <Line from={from} to={to} stroke={stroke} strokeWidth={strokeWidth} strokeLinecap={strokeLinecap}></Line>\r\n      ))}\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;"]},"metadata":{},"sourceType":"module"}